/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Layer3 {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    macros {
        w1: w1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_1)>;
            label = "W1";
        };

        w2: w2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_2)>;
            label = "W2";
        };

        w3: w3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_3)>;
            label = "W3";
        };

        w4: w4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_4)>;
            label = "W4";
        };

        w5: w5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_5)>;
            label = "W5";
        };

        dollar: dollar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp RA(NUMBER_4)>;
            label = "DOLLAR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P     &kp LEFT_BRACKET
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp N1         &kp N2         &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp EQUAL
&trans   &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans   &kp RS(RA(Z))  &kp RS(RA(X))  &trans        &trans        &bt BT_CLR      &trans    &trans    &trans  &trans     &trans  &trans
                                       &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL       &kp AT         &kp HASH  &kp RA(NUMBER_4)  &kp PRCNT    &kp CARET  &kp AMPS               &kp ASTERISK   &kp LPAR    &kp AMPERSAND  &kp LS(EQUAL)
&kp LCTRL  &none          &kp BACKSLASH  &none     &none             &none        &kp MINUS  &kp KP_MULTIPLY        &kp RA(N7)     &kp RA(N0)  &kp GRAVE      &kp RA(N2)
&kp LSHFT  &kp RS(RA(Z))  &kp RS(RA(X))  &none     &none             &none        &kp SLASH  &kp RIGHT_PARENTHESIS  &kp RA(N8)     &kp RA(N9)  &kp EQUAL      &kp RA(RIGHT_BRACKET)
                                         &kp LGUI  &trans            &kp SPACE    &kp RET    &trans                 &kp BACKSPACE
            >;
        };

        layer_3 {
            bindings = <
&kp TAB    &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)        &kp F7     &kp F8         &kp F1         &kp F2   &none  &none
&kp RCTRL  &kp LS(LG(N1))    &kp LS(LG(N2))    &kp LS(LG(N3))    &kp LS(LG(N4))    &kp LS(LG(N5))    &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP    &kp END  &none  &none
&trans     &none             &none             &none             &none             &none             &none      &none          &none          &none    &none  &none
                                               &trans            &trans            &kp SPACE         &kp ENTER  &trans         &kp BACKSPACE
            >;
        };
    };
};
